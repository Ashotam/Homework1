//Create a Rectangle class. Rectangle should have: length and width.
  //  It should have getters and setters for all fields.
   // It should have getArea() method.
    //It should have getPerimeter() method.
    //It should have a toString method

class Rectangle  {

    constructor(length,width) {
        this.length = length,
            this.width = width,
            this.toString = `object rectangle length ${this.length},width ${this.width}`
    }

    get length() {
        return this._length;
    }

    set length(value) {

        if(value < 0){
            this._length = value * -1

        }
        else this._length = value
    }
    get width(){
        return this._width;
    }

    set width(value) {

        if(value < 0){
            this._width = value * -1

        }
        else this._width = value
    }
    get area(){
        return this.length * this.width
    };
    get perimeter(){
        return 2*(this.length + this.width)
    };
}

let user = new Rectangle(7,-8);


//3Create an object called shape that has the type property and a getType() method.
// Define a Triangle() constructor function whose prototype is shape. Objects created with Triangle() should have three properties — a, b, and c, representing the lengths of the sides of a triangle.
// Add a new method to the prototype called getPerimeter()
//
//
// > var t = new Triangle(1, 2, 3);
// > t.constructor === Triangle;
//
// true
// > shape.isPrototypeOf(t);
//         true
// > t.getPerimeter();
//        6
// > t.getType();
//
// "triangle"
let shape = {
    tipe:"Triangle",
    getType:function(){
        return this.tipe
    }
};
function Triangle(a,b,c) {
    this.a = a;
    this.b = b;
    this.c = c;
}

Triangle.prototype = shape;
Triangle.prototype.getPerimeter = function(){return this.a*this.b * this.c};
let t = new Triangle(2,4,5);
t.constructor = Triangle;

//3Create an Author class and a Book class.
// Author should have: name, email, gender.
// It should have getters.
// It should have a toString method.
//
// Book should have: title, author(Author), price, quantity.
// It should have appropriate getters and setters.
// It should have a method: getProfit(), which calculates the profit from the book based on the price and quantity.
// It should have a toString method.
class Autor{
    constructor(name,email,gender){
        this.name = name;
        this.email = email;
        this.gender = gender;
    }
    getname(){
        return this.name;}
    getemail(){
        return this.email;}
    getgender(){
        return this.gender;
    }
    toString(){
        return "this is a Author"
    }
}
class Books{
    constructor(title,obj,price,quantity){
        this.title = title;
        this.autor=obj;
        this.price = price;
        this.quantity = quantity;
    }
    get title(){
        return this._title;}
    set title(value){
        this._title = value;
    }
    get price(){
        return this.price;}
    set price(value){
        this._price = value;
    }
    getProfit(){
        return this.price * this.quantity;
    }
    getProfit(){
        return this.price * this.quantity;
    }
    toString(){
        return `Books name is ${this.title}`;
    }
}

let ashot = new Autor("Ashot","mail.ru","arakan")
console.log(ashot.getname())
let idiot = new Books("idiot",ashot,1000,100)
console.log(idiot.toString());
//4What is output and why?
//
// function test (name) {
//    this.fullName = `My name is ${name}`
//    this.age = 5;
//    return this.age;
// }
// 	a )new test(’Some Name’);
// 	b)  test('Some Name’)

//a-Object,wsni vor stexcvelu e nor object ogtagorcelov test@ vorpes constructor
//b-number cani vor ashxatelu e test functian u veradarcni ag@ vori arjec@ 5 e;

//5  What is output and why?
//
// function test (name) {
//    this.fullName = `My name is ${name}`
//    this.age = 5;
//    return {
//        age: this.age
//    };
// }
//
// 	a )new test(’Some Name’);
// 	b)  test('Some Name’)
//nuyn skzbuncov arajin depqum stexcvelu e nor object,test constructori himan vra,erkrord depqum uxxaki ashxatelu e test functian u veradardzni object age keyov 5valeu ov
//6var Animal = function (name, type) {
//    this.kind = name,
//        this.breed = type
// }
//
// var playground = {
//    animals: [],
//
//    addAnimal(animal) {
//        this.animals.push(animal);
//    },
//
//    listAnimalKind(kind) {
//        this.animals.forEach(function (animal) {
//            if (animal.kind == kind) {
//                console.log(animal.breed);
//            }
//        });
//    }
// }
//
// playground.addAnimal(new Animal('dog', 'Labrador'));
// playground.addAnimal(new Animal('dog', 'Goldren Retriever'));
// playground.addAnimal(new Animal('rabbit', 'Angola'));
// playground.listAnimalKind('dog');
//'Labrador','Goldren Retriever'...qani vor playground.listAnimalKind('dog'); kanchvela dog argumentov,animal objectneric bavarareu en if paymanin en objectner@ vortex kind i valuen dog e,aysinqn vercvelu en arajin,erkrord ev chorod animal objectner@ u tpven nranc breed um pahvac arjeqner,4animal@ chuni breed key ktven miayn arajin ev erkrord objectneri breed valuen